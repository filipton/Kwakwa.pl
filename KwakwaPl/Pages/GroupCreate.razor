@page "/gcreate"
@using KwakwaPl.Data
@using KwakwaPl.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager _navManager

<h1>Create New Group</h1>

<EditForm Model="@createGroupModel" OnValidSubmit="@HandleCreateGroupModel" style="width: 100%;">
    <DataAnnotationsValidator />

    <div class="d-flex align-items-center justify-content-center">
        <div class="d-flex flex-column">
            <input type="text" class="p-2 form-control" placeholder="Enter GroupName" @bind-value="createGroupModel.GroupName" style="width: 100%;">
            <input type="text" class="p-2 form-control" placeholder="Enter Password" @bind-value="createGroupModel.Password" style="width: 100%;">

            <label title="If its checked password won't save in cookies, so after refresh you must type password again." class="checkbox">
                <input type="checkbox" @bind-value="createGroupModel.OneTimePassword"> One Time Password
            </label>

            <input type="password" class="p-2 form-control" placeholder="(TEMP) Enter Master Password" @bind-value="TempPassword" style="width: 100%;">

            <button type="submit" class="p-2 btn btn-primary" style="width: 100%;"><b>CREATE GROUP</b></button>
        </div>
    </div>
</EditForm>

@code {
    private CreateGroupModel createGroupModel = new();

    public string TempPassword;

    private async Task HandleCreateGroupModel()
    {
        if (TempPassword == Environment.GetEnvironmentVariable("MASTER_PASSWD") && MessagesContainer.Groups.FindIndex(x => x.GroupName == createGroupModel.GroupName) < 0)
        {
            Group tmpGroup = new Group()
            {
                GroupName = createGroupModel.GroupName,
                Password = createGroupModel.Password,
                OneTimePassword = createGroupModel.OneTimePassword
            };
            
            tmpGroup.Id = await DBConnect.ExecuteCommandAndReturnId($"INSERT INTO Groups (name, password, oneTimePswd) values ('{tmpGroup.GroupName}', '{tmpGroup.Password}', {tmpGroup.OneTimePassword});");

            MessagesContainer.Groups.Add(tmpGroup);
            
            _navManager.NavigateTo("/");
        }
    }
}